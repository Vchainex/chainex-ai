<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ChainEx AI - Solana Coin Tracker</title>
    <script src="https://cdn.jsdelivr.net/npm/@solana/web3.js@^1.41.0/dist/web3.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@solana/wallet-adapter-wallets"></script>
    <script src="https://cdn.jsdelivr.net/npm/@solana/wallet-adapter-react"></script>
    <script src="https://cdn.jsdelivr.net/npm/@solana/wallet-adapter-material-ui"></script>
    <script src="https://cdn.jsdelivr.net/npm/@solana/wallet-adapter-base"></script>
    <script src="https://cdn.jsdelivr.net/npm/@solana/wallet-adapter-ant-design"></script>
    <script src="https://cdn.jsdelivr.net/npm/@solana/wallet-adapter-react-ui"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f9f9f9;
        }
        header {
            background-color: #2d89ef;
            color: white;
            padding: 1rem;
            text-align: center;
        }
        header img {
            max-width: 120px;
            margin-bottom: 0.5rem;
        }
        nav {
            display: flex;
            justify-content: center;
            background-color: #1f5bb5;
            padding: 0.5rem 0;
        }
        nav a {
            color: white;
            text-decoration: none;
            margin: 0 1rem;
        }
        nav a:hover {
            text-decoration: underline;
        }
        .container {
            padding: 2rem;
        }
        .coin-list {
            display: flex;
            flex-wrap: wrap;
            gap: 1.5rem;
        }
        .coin-card {
            background: white;
            padding: 1rem;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            flex: 1 1 calc(33.333% - 2rem);
            text-align: center;
        }
        .coin-card h3 {
            margin: 0.5rem 0;
        }
        footer {
            text-align: center;
            padding: 1rem;
            background-color: #2d89ef;
            color: white;
        }
    </style>
</head>
<body>
    <header>
        <img src="logo.png" alt="ChainEx AI Logo">
        <h1>ChainEx AI</h1>
        <p>Only 1 billion ChainEx AI tokens have been created.</p>
        <p>Your Solana Blockchain Coin Tracker</p>
    </header>
    <nav>
        <a href="#">Home</a>
        <a href="#trending">Trending Coins</a>
        <a href="#new">New Coins</a>
        <a href="#contact">Contact</a>
    </nav>
    <div class="container">
        <section id="wallet">
            <h2>Connect Your Wallet</h2>
            <button id="connect-wallet">Connect Wallet</button>
        </section>
        <section id="trending">
            <h2>Top Performing Coins</h2>
            <div class="coin-list" id="trending-coins">
                <!-- Coins will be dynamically added here -->
            </div>
        </section>
        <section id="new">
            <h2>New Coins on Solana</h2>
            <div class="coin-list" id="new-coins">
                <!-- Coins will be dynamically added here -->
            </div>
        </section>
    </div>
    <footer>
        <p>&copy; 2025 ChainEx AI. All Rights Reserved.</p>
    </footer>

    <script>
        const trendingCoinsContainer = document.getElementById('trending-coins');
        const newCoinsContainer = document.getElementById('new-coins');

        // Fetch trending and new coins from pump.fun and Dexscreener
        async function fetchCoins() {
            try {
                const pumpFunResponse = await fetch('https://api.pump.fun/v1/trending');
                const pumpFunData = await pumpFunResponse.json();

                const dexscreenerResponse = await fetch('https://api.dexscreener.com/v1/solana');
                const dexscreenerData = await dexscreenerResponse.json();

                updateCoinList(trendingCoinsContainer, pumpFunData.trendingCoins);
                updateCoinList(newCoinsContainer, dexscreenerData.newCoins);
            } catch (error) {
                console.error('Error fetching coin data:', error);
            }
        }

        function updateCoinList(container, coins) {
            container.innerHTML = '';
            coins.forEach(coin => {
                const coinCard = document.createElement('div');
                coinCard.className = 'coin-card';
                coinCard.innerHTML = `
                    <h3>${coin.name}</h3>
                    <p>Market Cap: ${coin.marketCap}</p>
                    <p>24H Change: ${coin.change24h}</p>
                `;
                container.appendChild(coinCard);
            });
        }

        // Wallet connection logic
        document.getElementById('connect-wallet').addEventListener('click', async () => {
            try {
                const wallet = new solanaWalletAdapterWallets.PhantomWallet();
                await wallet.connect();
                alert(`Connected to wallet: ${wallet.publicKey}`);
            } catch (error) {
                console.error('Wallet connection failed:', error);
            }
        });

        // Initialize data fetch
        fetchCoins();
    </script>
</body>
</html>
